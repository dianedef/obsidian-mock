import { WorkspaceParent, WorkspaceLeaf as IWorkspaceLeaf, View, OpenViewState, TFile } from 'obsidian';
import { WorkspaceContainer } from './core/workspace-components';
import { Events } from './components/events';
export declare class WorkspaceLeaf extends Events implements IWorkspaceLeaf {
    containerEl: HTMLElement;
    private _parent;
    private _view;
    group: string;
    pinned: boolean;
    id: string;
    constructor(parent?: WorkspaceParent | null);
    get view(): View;
    set view(value: View);
    get parent(): WorkspaceParent;
    set parent(value: WorkspaceParent);
    setViewState(viewState: any, eState?: any): Promise<void>;
    getViewState(): any;
    getEphemeralState(): any;
    setEphemeralState(state: any): void;
    open(view: View): Promise<View>;
    openFile(_file: TFile, _openState?: OpenViewState): Promise<void>;
    detach(): void;
    getRoot(): WorkspaceParent;
    getContainer(): WorkspaceContainer;
    setPinned(pinned: boolean): void;
    togglePinned(): void;
    setGroup(group: string): void;
    setGroupMember(other: IWorkspaceLeaf): void;
    getIcon(): string;
    getDisplayText(): string;
    onResize(): void;
    get isDeferred(): boolean;
    loadIfDeferred(): Promise<void>;
}
